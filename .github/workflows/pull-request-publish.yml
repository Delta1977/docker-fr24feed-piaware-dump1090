name: Pull Request publish

on:
  issue_comment:
    types: [created]

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: thomx/fr24feed-piaware
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  # Push image to GitHub Packages and Docker Hub.
  push:
    # Ensure test job passes before pushing image.
    needs: test
    environment: docker
    runs-on: ubuntu-latest

    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '@deploy'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: Checkout
        if: steps.check.outputs.triggered == 'true'
        uses: actions/checkout@v2
      - name: Set up QEMU
        if: steps.check.outputs.triggered == 'true'
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: steps.check.outputs.triggered == 'true'
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        if: steps.check.outputs.triggered == 'true'
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        if: steps.check.outputs.triggered == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get tags list
        if: steps.check.outputs.triggered == 'true'
        id: tags
        run: |
          TAGS=$IMAGE_NAME:PR-$PR_NUMBER
          echo TAGS=$TAGS
          echo "::set-output name=tags::$TAGS"
      - name: Build and push
        if: steps.check.outputs.triggered == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache